{"version":3,"sources":["webpack:///./src/templates/state.js"],"names":["Table","styled","table","Date","td","pageContext","allScreenshots","screenshots","forEach","screenshot","date","primary","secondary","tertiary","quaternary","quinary","push","state","name","href","slug","links","twitter","childTacoYaml","map","link","charAt","toUpperCase","slice","url","search","target","Object","values","find","shot","length","item","time"],"mappings":"whBAIA,IAAMA,EAAQC,IAAOC,MAAV,KAiBLC,EAAOF,IAAOG,GAAV,KAIK,sBAAsB,IAAnBC,EAAkB,EAAlBA,YACVC,EAAiB,GA+BvB,OA9BAD,EAAYE,YAAYC,SAAQ,SAACC,QACgB,IAApCH,EAAeG,EAAWC,QACnCJ,EAAeG,EAAWC,MAAQ,CAChCA,KAAMD,EAAWC,KACjBC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,QAAS,KAGTN,EAAWI,SACbP,EAAeG,EAAWC,MAAMG,SAASG,KAAKP,GAG5CA,EAAWG,UACbN,EAAeG,EAAWC,MAAME,UAAUI,KAAKP,GAG7CA,EAAWK,WACbR,EAAeG,EAAWC,MAAMI,WAAWE,KAAKP,GAG9CA,EAAWM,QACbT,EAAeG,EAAWC,MAAMK,QAAQC,KAAKP,GAG/CH,EAAeG,EAAWC,MAAMC,QAAQK,KAAKP,MAI7C,kBAAC,IAAD,KACE,4BAAKJ,EAAYY,MAAMC,MACvB,2BACE,uBACEC,KAAI,wCAA0Cd,EAAYY,MAAMG,MADlE,2BAMDf,EAAYgB,OACX,4BACGhB,EAAYY,MAAMK,SACjB,4BACE,uBAAGH,KAAI,uBAAyBd,EAAYY,MAAMK,SAAlD,6BAKHjB,EAAYgB,MAAME,cAAcF,MAAMG,KAAI,SAACC,GAAD,OACzC,4BACE,gCACGA,EAAKP,KAAKQ,OAAO,GAAGC,cAAgBF,EAAKP,KAAKU,MAAM,GADvD,KAEU,IACTH,EAAKI,IAAIC,OAAO,QAAU,EACzB,8FAEE,6BACA,8BAAOL,EAAKI,MAGd,oCACE,uBAAGV,KAAMM,EAAKI,IAAKE,OAAO,UACvBN,EAAKI,WAQpB,kBAAC7B,EAAD,KACE,+BACE,4BACE,oCACA,uCACA,yCACA,wCACCgC,OAAOC,OAAO3B,GAAgB4B,MAC7B,SAACC,GAAD,OAAUA,EAAKrB,WAAWsB,OAAS,MAChC,0CACJJ,OAAOC,OAAO3B,GAAgB4B,MAC7B,SAACC,GAAD,OAAUA,EAAKpB,QAAQqB,OAAS,MAC7B,yCAGT,+BACGJ,OAAOC,OAAO3B,GAAgBkB,KAAI,SAACf,GAAD,OACjC,4BACE,kBAACN,EAAD,KAAOM,EAAWC,MAClB,4BACE,4BACGD,EAAWE,QAAQa,KAAI,SAACa,GAAD,OACtB,4BACE,uBAAGlB,KAAMkB,EAAKR,IAAKE,OAAO,UACvBM,EAAKC,YAMhB,4BACE,4BACG7B,EAAWG,UAAUY,KAAI,SAACa,GAAD,OACxB,4BACE,uBAAGlB,KAAMkB,EAAKR,IAAKE,OAAO,UACvBM,EAAKC,YAMhB,4BACE,4BACG7B,EAAWI,SAASW,KAAI,SAACa,GAAD,OACvB,4BACE,uBAAGlB,KAAMkB,EAAKR,IAAKE,OAAO,UACvBM,EAAKC,YAMf7B,EAAWK,WAAWsB,OAAS,GAC9B,4BACE,4BACG3B,EAAWK,WAAWU,KAAI,SAACa,GAAD,OACzB,4BACE,uBAAGlB,KAAMkB,EAAKR,IAAKE,OAAO,UACvBM,EAAKC,YAOjB7B,EAAWM,QAAQqB,OAAS,GAC3B,4BACE,4BACG3B,EAAWM,QAAQS,KAAI,SAACa,GAAD,OACtB,4BACE,uBAAGlB,KAAMkB,EAAKR,IAAKE,OAAO,UACvBM,EAAKC","file":"component---src-templates-state-js-bccebb453eebae89c42e.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport Layout from '../components/layout'\n\nconst Table = styled.table`\n  width: 100%;\n  tr {\n    border-bottom: 1px solid black;\n  }\n  ul {\n    list-style-type: none;\n    li {\n      display: inline-block;\n      margin-right: 1rem;\n    }\n    a {\n      color: black;\n    }\n  }\n`\n\nconst Date = styled.td`\n  width: 150px;\n`\n\nexport default ({ pageContext }) => {\n  const allScreenshots = {}\n  pageContext.screenshots.forEach((screenshot) => {\n    if (typeof allScreenshots[screenshot.date] === 'undefined') {\n      allScreenshots[screenshot.date] = {\n        date: screenshot.date,\n        primary: [],\n        secondary: [],\n        tertiary: [],\n        quaternary: [],\n        quinary: [],\n      }\n    }\n    if (screenshot.tertiary) {\n      allScreenshots[screenshot.date].tertiary.push(screenshot)\n      return\n    }\n    if (screenshot.secondary) {\n      allScreenshots[screenshot.date].secondary.push(screenshot)\n      return\n    }\n    if (screenshot.quaternary) {\n      allScreenshots[screenshot.date].quaternary.push(screenshot)\n      return\n    }\n    if (screenshot.quinary) {\n      allScreenshots[screenshot.date].quinary.push(screenshot)\n      return\n    }\n    allScreenshots[screenshot.date].primary.push(screenshot)\n  })\n\n  return (\n    <Layout>\n      <h2>{pageContext.state.name}</h2>\n      <p>\n        <a\n          href={`https://covidtracking.com/data/state/${pageContext.state.slug}`}\n        >\n          View state information\n        </a>\n      </p>\n      {pageContext.links && (\n        <ul>\n          {pageContext.state.twitter && (\n            <li>\n              <a href={`https://twitter.com/${pageContext.state.twitter}`}>\n                Official Twitter account\n              </a>\n            </li>\n          )}\n          {pageContext.links.childTacoYaml.links.map((link) => (\n            <li>\n              <strong>\n                {link.name.charAt(0).toUpperCase() + link.name.slice(1)}:\n              </strong>{' '}\n              {link.url.search('http') > 0 ? (\n                <>\n                  We dynamically generate the URL, based on this pattern:\n                  <br />\n                  <code>{link.url}</code>\n                </>\n              ) : (\n                <>\n                  <a href={link.url} target=\"_blank\">\n                    {link.url}\n                  </a>\n                </>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <Table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Primary</th>\n            <th>Secondary</th>\n            <th>Tertiary</th>\n            {Object.values(allScreenshots).find(\n              (shot) => shot.quaternary.length > 0,\n            ) && <th>Quaternary</th>}\n            {Object.values(allScreenshots).find(\n              (shot) => shot.quinary.length > 0,\n            ) && <th>Quinary</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {Object.values(allScreenshots).map((screenshot) => (\n            <tr>\n              <Date>{screenshot.date}</Date>\n              <td>\n                <ul>\n                  {screenshot.primary.map((item) => (\n                    <li>\n                      <a href={item.url} target=\"_blank\">\n                        {item.time}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </td>\n              <td>\n                <ul>\n                  {screenshot.secondary.map((item) => (\n                    <li>\n                      <a href={item.url} target=\"_blank\">\n                        {item.time}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </td>\n              <td>\n                <ul>\n                  {screenshot.tertiary.map((item) => (\n                    <li>\n                      <a href={item.url} target=\"_blank\">\n                        {item.time}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </td>\n              {screenshot.quaternary.length > 0 && (\n                <td>\n                  <ul>\n                    {screenshot.quaternary.map((item) => (\n                      <li>\n                        <a href={item.url} target=\"_blank\">\n                          {item.time}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n              )}\n              {screenshot.quinary.length > 0 && (\n                <td>\n                  <ul>\n                    {screenshot.quinary.map((item) => (\n                      <li>\n                        <a href={item.url} target=\"_blank\">\n                          {item.time}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}